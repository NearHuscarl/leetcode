{
  "id": "longest-consecutive-sequence",
  "neetcode": "https://www.youtube.com/watch?v=P6RZZMu_maU",
  "testCases": [
    {
      "nums": [
        100,
        4,
        200,
        1,
        3,
        2
      ]
    },
    {
      "nums": [
        0,
        3,
        7,
        2,
        5,
        8,
        4,
        6,
        0,
        1
      ]
    }
  ],
  "metaData": {
    "name": "longestConsecutive",
    "params": [
      {
        "name": "nums",
        "type": "number[]"
      }
    ],
    "return": {
      "type": "number"
    }
  },
  "solutions": {
    "set": {
      "id": "set",
      "name": "Set",
      "programCode": "/**\r\n * @param {number[]} nums\r\n * @return {number}\r\n */\r\nvar longestConsecutive = function (nums) {\r\n  const set = new Set(nums);\r\n  let max = 0;\r\n\r\n  for (const item of nums) {\r\n    const isStartOfSeq = !set.has(item - 1);\r\n\r\n    if (isStartOfSeq) {\r\n      let seqLength = 1;\r\n      let seqItem = item;\r\n\r\n      while (set.has(seqItem + 1)) {\r\n        seqLength++;\r\n        seqItem++;\r\n      }\r\n      max = Math.max(seqLength, max);\r\n    }\r\n  }\r\n\r\n  return max;\r\n};\r\n",
      "visualizerCode": "import React from 'react';\r\nimport { useVisualizerData, VArray, VSet } from 'visualizer';\r\nimport { red, yellow, blue, lightGreen } from 'colors';\r\n\r\nexport const Visualizer = () => {\r\n  const { data, expression, type } = useVisualizerData();\r\n  const {} = data;\r\n\r\n  return <></>;\r\n};\r\n",
      "timeComplexity": "n"
    }
  },
  "acRate": 48.5,
  "difficulty": "Medium",
  "title": "Longest Consecutive Sequence",
  "titleSlug": "longest-consecutive-sequence",
  "topicTags": [
    {
      "name": "Array",
      "slug": "array"
    },
    {
      "name": "Hash Table",
      "slug": "hash-table"
    },
    {
      "name": "Union Find",
      "slug": "union-find"
    }
  ]
}