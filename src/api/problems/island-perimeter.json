{
  "id": "island-perimeter",
  "neetcode": "https://www.youtube.com/watch?v=fISIuAFRM2s",
  "testCases": [
    {
      "grid": [
        [
          0,
          1,
          0,
          0
        ],
        [
          1,
          1,
          1,
          0
        ],
        [
          0,
          1,
          0,
          0
        ],
        [
          1,
          1,
          0,
          0
        ]
      ]
    }
  ],
  "metaData": {
    "name": "islandPerimeter",
    "params": [
      {
        "name": "grid",
        "type": "number[][]"
      }
    ],
    "return": {
      "type": "number"
    }
  },
  "solutions": {
    "dfs": {
      "id": "dfs",
      "name": "Depth-First Search",
      "programCode": "/**\r\n * @param {number[][]} grid\r\n * @return {number}\r\n */\r\nvar islandPerimeter = function (grid) {\r\n  const visit = new Set();\r\n\r\n  const dfs = (i, j) => {\r\n    if (\r\n      i >= grid.length ||\r\n      j >= grid[0].length ||\r\n      i < 0 ||\r\n      j < 0 ||\r\n      grid[i][j] === 0\r\n    ) {\r\n      return 1;\r\n    }\r\n    const key = `${i},${j}`;\r\n    if (visit.has(key)) {\r\n      return 0;\r\n    }\r\n    visit.add(key);\r\n\r\n    let perim = dfs(i, j + 1);\r\n    perim += dfs(i + 1, j);\r\n    perim += dfs(i, j - 1);\r\n    perim += dfs(i - 1, j);\r\n    return perim;\r\n  };\r\n\r\n  for (let i = 0; i < grid.length; i++) {\r\n    for (let j = 0; j < grid[0].length; j++) {\r\n      if (grid[i][j]) {\r\n        return dfs(i, j);\r\n      }\r\n    }\r\n  }\r\n};\r\n",
      "visualizerCode": "import React from 'react';\r\nimport { useVisualizerData, VArray, VSet } from 'visualizer';\r\nimport { red, yellow, blue, lightGreen } from 'colors';\r\n\r\nexport const Visualizer = () => {\r\n  const { data, expression, type } = useVisualizerData();\r\n  const {} = data;\r\n\r\n  return null;\r\n};\r\n",
      "timeComplexity": "n * m"
    }
  },
  "acRate": 69.7,
  "difficulty": "Easy",
  "title": "Island Perimeter",
  "titleSlug": "island-perimeter",
  "topicTags": [
    {
      "name": "Array",
      "slug": "array"
    },
    {
      "name": "Depth-First Search",
      "slug": "depth-first-search"
    },
    {
      "name": "Breadth-First Search",
      "slug": "breadth-first-search"
    },
    {
      "name": "Matrix",
      "slug": "matrix"
    }
  ]
}